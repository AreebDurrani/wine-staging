From 613ea1e263d4fbda67465ebaae2331df7728106a Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sun, 6 Sep 2015 12:41:17 +0200
Subject: [PATCH] ws2_32: Invalidate client-side file descriptor cache in
 WSACleanup.

---
 dlls/ntdll/ntdll.spec          |  1 +
 dlls/ntdll/server.c            |  8 ++++++++
 dlls/ntdll/unix/loader.c       |  1 +
 dlls/ntdll/unix/server.c       | 20 ++++++++++++++++++++
 dlls/ntdll/unix/unix_private.h |  1 +
 dlls/ntdll/unixlib.h           |  3 ++-
 dlls/ws2_32/socket.c           |  1 +
 dlls/ws2_32/tests/sock.c       |  5 +----
 include/wine/server.h          |  1 +
 9 files changed, 36 insertions(+), 5 deletions(-)

diff --git a/dlls/ntdll/ntdll.spec b/dlls/ntdll/ntdll.spec
index 42532bd9f1c..ba46f170670 100644
--- a/dlls/ntdll/ntdll.spec
+++ b/dlls/ntdll/ntdll.spec
@@ -1575,6 +1575,7 @@
 
 # Server interface
 @ cdecl -norelay wine_server_call(ptr)
+@ cdecl wine_server_close_fds_by_type(long)
 @ cdecl wine_server_fd_to_handle(long long long ptr)
 @ cdecl wine_server_handle_to_fd(long long ptr ptr)
 @ cdecl wine_server_release_fd(long long)
diff --git a/dlls/ntdll/server.c b/dlls/ntdll/server.c
index 6fb86a68d6f..2f95e190963 100644
--- a/dlls/ntdll/server.c
+++ b/dlls/ntdll/server.c
@@ -239,6 +239,14 @@ void CDECL wine_server_release_fd( HANDLE handle, int unix_fd )
     unix_funcs->server_release_fd( handle, unix_fd );
 }
 
+ /***********************************************************************
+ *           wine_server_close_fds_by_type
+ */
+void CDECL wine_server_close_fds_by_type( enum server_fd_type type )
+{
+    unix_funcs->server_remove_fds_from_cache_by_type( type );
+}
+
 
 /***********************************************************************
  *           server_init_process
diff --git a/dlls/ntdll/unix/loader.c b/dlls/ntdll/unix/loader.c
index 767cae92b48..05c6f1e43bf 100644
--- a/dlls/ntdll/unix/loader.c
+++ b/dlls/ntdll/unix/loader.c
@@ -1074,6 +1074,7 @@ static struct unix_funcs unix_funcs =
     server_wait,
     server_queue_process_apc,
     server_send_fd,
+    server_remove_fds_from_cache_by_type,
     server_get_unix_fd,
     server_fd_to_handle,
     server_handle_to_fd,
diff --git a/dlls/ntdll/unix/server.c b/dlls/ntdll/unix/server.c
index 66c438fd62d..c6eb52c5986 100644
--- a/dlls/ntdll/unix/server.c
+++ b/dlls/ntdll/unix/server.c
@@ -991,6 +991,26 @@ static int remove_fd_from_cache( HANDLE handle )
     return fd;
 }
 
+/***********************************************************************
+ *           server_remove_fds_from_cache_by_type
+ */
+void CDECL server_remove_fds_from_cache_by_type( enum server_fd_type type )
+{
+    union fd_cache_entry cache;
+    unsigned int entry, idx;
+
+    for (entry = 0; entry < FD_CACHE_ENTRIES; entry++)
+    {
+        if (!fd_cache[entry]) continue;
+        for (idx = 0; idx < FD_CACHE_BLOCK_SIZE; idx++)
+        {
+            cache.data = InterlockedCompareExchange64( &fd_cache[entry][idx].data, 0, 0 );
+            if (cache.s.type != type || cache.s.fd == 0) continue;
+            if (InterlockedCompareExchange64( &fd_cache[entry][idx].data, 0, cache.data ) != cache.data) continue;
+            close( cache.s.fd - 1 );
+        }
+    }
+}
 
 /***********************************************************************
  *           server_get_unix_fd
diff --git a/dlls/ntdll/unix/unix_private.h b/dlls/ntdll/unix/unix_private.h
index 6fdaa17f087..6512160972d 100644
--- a/dlls/ntdll/unix/unix_private.h
+++ b/dlls/ntdll/unix/unix_private.h
@@ -85,6 +85,7 @@ extern unsigned int CDECL server_wait( const select_op_t *select_op, data_size_t
                                        const LARGE_INTEGER *timeout ) DECLSPEC_HIDDEN;
 extern unsigned int CDECL server_queue_process_apc( HANDLE process, const apc_call_t *call, apc_result_t *result ) DECLSPEC_HIDDEN;
 extern void CDECL server_send_fd( int fd ) DECLSPEC_HIDDEN;
+extern void CDECL server_remove_fds_from_cache_by_type( enum server_fd_type type ) DECLSPEC_HIDDEN;
 extern int CDECL server_get_unix_fd( HANDLE handle, unsigned int wanted_access, int *unix_fd,
                                      int *needs_close, enum server_fd_type *type,
                                      unsigned int *options ) DECLSPEC_HIDDEN;
diff --git a/dlls/ntdll/unixlib.h b/dlls/ntdll/unixlib.h
index 4e5cec6637e..72f35cf67e8 100644
--- a/dlls/ntdll/unixlib.h
+++ b/dlls/ntdll/unixlib.h
@@ -28,7 +28,7 @@ struct ldt_copy;
 struct msghdr;
 
 /* increment this when you change the function table */
-#define NTDLL_UNIXLIB_VERSION 27
+#define NTDLL_UNIXLIB_VERSION 28
 
 struct unix_funcs
 {
@@ -184,6 +184,7 @@ struct unix_funcs
                                         const LARGE_INTEGER *timeout );
     unsigned int  (CDECL *server_queue_process_apc)( HANDLE process, const apc_call_t *call, apc_result_t *result );
     void          (CDECL *server_send_fd)( int fd );
+    void          (CDECL *server_remove_fds_from_cache_by_type)( enum server_fd_type type );
     int           (CDECL *server_get_unix_fd)( HANDLE handle, unsigned int wanted_access, int *unix_fd,
                                                int *needs_close, enum server_fd_type *type, unsigned int *options );
     NTSTATUS      (CDECL *server_fd_to_handle)( int fd, unsigned int access, unsigned int attributes,
diff --git a/dlls/ws2_32/socket.c b/dlls/ws2_32/socket.c
index bbc44ca2c20..37d110d216f 100644
--- a/dlls/ws2_32/socket.c
+++ b/dlls/ws2_32/socket.c
@@ -1729,6 +1729,7 @@ INT WINAPI WSACleanup(void)
 
     if (!--num_startup)
     {
+        wine_server_close_fds_by_type( FD_TYPE_SOCKET );
         SERVER_START_REQ(socket_cleanup)
         {
             wine_server_call( req );
diff --git a/dlls/ws2_32/tests/sock.c b/dlls/ws2_32/tests/sock.c
index 9fe89d9dba3..c2e1379fe6f 100644
--- a/dlls/ws2_32/tests/sock.c
+++ b/dlls/ws2_32/tests/sock.c
@@ -1250,10 +1250,7 @@ static void test_WithWSAStartup(void)
             SetLastError(0xdeadbeef);
             res = getsockname(sock, (struct sockaddr *)&saddr, &size);
             error = WSAGetLastError();
-            if (j == 2 || (j == 0 && i == 0))
-                todo_wine ok(res == SOCKET_ERROR, "Test[%d]: getsockname should have failed\n", i);
-            else
-                ok(res == SOCKET_ERROR, "Test[%d]: getsockname should have failed\n", i);
+            ok(res == SOCKET_ERROR, "Test[%d]: getsockname should have failed\n", i);
             todo_wine ok(error == WSAENOTSOCK, "Test[%d]: expected 10038, got %d\n", i, error);
         }
     }
diff --git a/include/wine/server.h b/include/wine/server.h
index ac5dcc6f8bc..5cf52887516 100644
--- a/include/wine/server.h
+++ b/include/wine/server.h
@@ -54,6 +54,7 @@ extern void CDECL wine_server_send_fd( int fd );
 extern int CDECL wine_server_fd_to_handle( int fd, unsigned int access, unsigned int attributes, HANDLE *handle );
 extern int CDECL wine_server_handle_to_fd( HANDLE handle, unsigned int access, int *unix_fd, unsigned int *options );
 extern void CDECL wine_server_release_fd( HANDLE handle, int unix_fd );
+extern void CDECL wine_server_close_fds_by_type( enum server_fd_type type );
 
 /* do a server call and set the last error code */
 static inline unsigned int wine_server_call_err( void *req_ptr )
-- 
2.26.2

